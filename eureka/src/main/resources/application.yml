server:
  port: 5060
spring:
  application:
    name: eureka-server
eureka:
  client:
    #是否启用注册服务信息，因为这是一个单节点的EurekaServer，不需要同步其他的EurekaServer节点的数据，所以设置为false；
    fetch-registry: true
    #表示是否向eureka注册服务，即在自己的eureka中注册自己，默认为true，此处应该设置为false；集群是true
    register-with-eureka: true
    #健康检查默认情况下，Eureka使用客户端心跳来确定客户端是否启动。除非另有规定，
    #否则发现客户端将不会根据Spring Boot执行器传播应用程序的当前运行状况检查状态。
    #这意味着成功注册后Eureka将永远宣布申请处于“UP”状态。通过启用Eureka运行状况检查可以改变此行为，从而将应用程序状态传播到Eureka。
    #因此，每个其他应用程序将不会在“UP”之外的状态下将流量发送到应用程序。
    #只能在application.yml中设置。设置bootstrap.yml中的值将导致不期望的副作用，例如在具有UNKNOWN状态的eureka中注册。
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone:  http://${eureka.instance.hostname}:5070/eureka
  instance:
    hostname: localhost
  server:
    #设为false，关闭自我保护，即Eureka server在云心光器件会去统计心跳失败比例在15分钟之内是否低于85%,如果低于85%，EurekaServer
    #会将这些事例保护起来，让这些事例不会过期，但是在保护器内如果刚哈这个服务提供者非正常下线了，此时服务消费者会拿到一个无效的服务
    #实例，此时调用会失败，对于这个问题需要服务消费者端有一些容错机制，如重试、断路器等；生产环境开启
    #false服务调不通后就踢出注册中心
    enable-self-preservation: false
    #扫描失效服务的间隔时间（单位是毫秒，摩恩是60*1000)，即60s
    eviction-interval-timer-in-ms: 10000

